module.exports=function(e){function t(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){e.exports=r(1)},function(e,t){"use strict";function r(e,t){return t?""+e+t:null}function n(e,t,r,n,o){var a=n.ignoreLinks,u=t.relationships[r];if("undefined"!=typeof u.data)return Array.isArray(u.data)?u.data.map(function(t){return i(e,t.type,t.id,n,o)||t}):null===u.data?null:i(e,u.data.type,u.data.id,n,o)||u.data;if(!a&&u.links)throw new Error("Remote lazy loading is not supported (see: https://github.com/yury-dymov/json-api-normalizer/issues/2). To disable this error, include option 'ignoreLinks: true' in the build function like so: build(reducer, type, id, { ignoreLinks: true })")}function i(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},l={eager:!1,ignoreLinks:!1,includeType:!1},s=o({},l,u),c=s.eager,p=s.includeType;if(!e[t])return null;if(null===a||Array.isArray(a)){var f=a||Object.keys(e[t]);return f.map(function(r){return i(e,t,r,s,d)})}var y=a.toString(),v=r(t,y),g=d[v];if(g)return g;var h={},b=e[t][y];return b?(b.id&&(h.id=b.id),Object.keys(b.attributes).forEach(function(e){h[e]=b.attributes[e]}),b.meta&&(h.meta=b.meta),p&&!h.type&&(h.type=t),d[v]=h,b.relationships&&Object.keys(b.relationships).forEach(function(t){c?h[t]=n(e,b,t,s,d):Object.defineProperty(h,t,{get:function(){var r="__"+t;return h[r]?h[r]:(h[r]=n(e,b,t,s,d),h[r])}})}),"undefined"==typeof h.id&&(h.id=y),h):null}Object.defineProperty(t,"__esModule",{value:!0});var o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e};t.default=i}]);